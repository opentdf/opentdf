on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - main
  schedule:
    - cron: "0 7 * * 1,3,5"
    - cron: "0 7 * * 2,4"
jobs:
  deltas:
    runs-on: ubuntu-latest
    outputs:
      clientapp: ${{ steps.changes.outputs.clientapp }}
      offline: ${{ steps.changes.outputs.offline }}
      quickstart: ${{ steps.changes.outputs.quickstart }}
      scripts: ${{ steps.changes.outputs.scripts }}
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |-
            offline:
              - 'examples/offline/**'
              - 'quickstart/start.sh'
            quickstart:
              - 'quickstart/**'
            scripts:
              - 'scripts/**'
            clientapp:
              - 'examples/nanotdf-client-app/**'
      - name: ðŸ¦ª âœ” ðŸ§¼ðŸ§¼ðŸ§¼
        if: ${{ steps.changes.outputs.scripts }}
        run: >-
          docker run --rm -v "$PWD:/mnt" --workdir "/mnt" "koalaman/shellcheck:v0.8.0" --color=always
          scripts/*

  quickstart-test:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: read
      packages: read
    needs: deltas
    if: ${{ needs.deltas.outputs.quickstart == 'true' || github.event.schedule }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: "3.9"
          cache: "pip"
      - run: pip install opentdf
      - uses: yokawasa/action-setup-kube-tools@v0.7.1
        with:
          setup-tools: |
            kubectl
            helm
            tilt
          # This should be in sync with the minikube-deployed kube version below
          kubectl: "1.23.3"
          helm: "3.8.1"
          helmv3: "3.8.1"
          tilt: "0.26.3"
      - run: |
          kustomize version
          tilt version
      - name: Start Minikube
        id: minikube
        uses: medyagh/setup-minikube@latest
        with:
          minikube-version: 1.25.2
          # This should be in sync with the setup-tools version above
          kubernetes-version: 1.23.3
      - name: Get cluster versions
        run: |-
          kubectl version
          kubectl get pods -A
      - env:
          TEST_SCRIPT: tests/wait-and-test.sh
        run: tilt ci
        working-directory: quickstart

  offline-start-test:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: read
      packages: read
    needs: deltas
    if: >-
      ${{ needs.deltas.outputs.offline == 'true' || github.event.schedule == '0 7 * * 2,4' }}
    steps:
      - uses: actions/checkout@v3
      - name: ðŸ¦ª âœ” ðŸ§¼ðŸ§¼ðŸ§¼
        run: >-
          docker run --rm -v "$PWD:/mnt" --workdir "/mnt" "koalaman/shellcheck:v0.8.0" -x --color=always
          examples/offline/{build-offline-bundle,docker-load-and-tag-exports,test-offline-bundle}
          quickstart/start.sh
      - uses: actions/setup-python@v3
        with:
          python-version: "3.9"
          cache: "pip"
      - run: pip install opentdf
      - uses: yokawasa/action-setup-kube-tools@v0.7.1
        with:
          setup-tools: |
            kubectl
            helm
            tilt
          # This should be in sync with the minikube-deployed kube version below
          kubectl: "1.23.3"
          helm: "3.8.1"
          helmv3: "3.8.1"
          tilt: "0.26.3"
      - run: |
          kustomize version
          tilt version
      - name: build offline bundle
        id: bundler
        run: examples/offline/build-offline-bundle --no-zip
      - name: Start Minikube
        id: minikube
        uses: medyagh/setup-minikube@latest
        with:
          minikube-version: 1.25.2
          # This should be in sync with the setup-tools version above
          kubernetes-version: 1.23.3
      - name: Get cluster versions
        run: |-
          kubectl version
          kubectl get pods -A
      - run: ./examples/offline/test-offline-bundle

  nanotdf-client-app-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./examples/nanotdf-client-app
    timeout-minutes: 30
    needs: deltas
    if: >-
      ${{ needs.deltas.outputs.clientapp == 'true' || github.event.schedule == '0 7 * * 2,4' }}
    permissions:
      contents: read
      packages: read
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: "npm"
          cache-dependency-path: "./examples/nanotdf-client-app/package-lock.json"
          registry-url: "https://npm.pkg.github.com"
      - run: npm ci
        env:
          NODE_AUTH_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      - run: npm test
      - run: npm audit --audit-level high && npm audit --production

  ci:
    needs:
      [deltas, quickstart-test, offline-start-test, nanotdf-client-app-test]
    if: always()
    runs-on: ubuntu-latest
    strategy:
      matrix:
        job:
          [deltas, quickstart-test, offline-start-test, nanotdf-client-app-test]
    steps:
      - run: |-
          echo "${{ matrix.job }} Failed!"
          exit 1
        if: >-
          ${{ needs[matrix.job].result == 'failure' }}
      - run: |-
          echo "${{ matrix.job }} cancelled"
          exit 1
        if: >-
          ${{ needs[matrix.job].result == 'cancelled' }}
