on:
  pull_request:
      branches:
        - main
  # schedule: 
  #   # runs once a week on sunday
  #   - cron: "55 23 * * 0"

    
jobs:
  traffic:
    runs-on: ubuntu-latest
    permissions: write-all
    strategy:
      matrix:
        repo:
          - opentdf
          - backend
          - frontend
    steps:
    # - name: View context attributes
    #   uses: actions/github-script@v6
    #   with:
    #     script: console.log(context)
    - name: checkout repo
      uses: actions/checkout@v3
    - name: Get Traffic
      uses: actions/github-script@v6
      id: get-traffic
      env:
        OWNER: opentdf
        REPO: ${{ matrix.repo }}
        EVENT_TYPE: opentdf-${{ matrix.repo }}-github
      with:
        github-token: ${{ secrets.PERSONAL_ACCESS_TOKEN }} 
        retries: 3
        script: |
          var fs = require('fs')
          const getMetrics = require('./scripts/metrics.js')
          const result = await getMetrics({github, context})
          console.log(result)
          fs.writeFile(process.env.REPO+".json", JSON.stringify(result))
          return result
    - name: List items in repo
      run: ls
    # - name: opentdf/backend traffic  
    #   uses: actions/github-script@v6
    #   id: backend-traffic
    #   env:
    #     OWNER: opentdf
    #     REPO: backend
    #     EVENT_TYPE: opentdf-backend-github
    #   with:
    #     github-token: ${{ secrets.PERSONAL_ACCESS_TOKEN }} 
    #     retries: 3
    #     script: |
    #       const script = require('./scripts/metrics.js')
    #       const result = await script({github, context})
    #       console.log(result)
    #       return result
    # - name: Write to CSV
    #   uses: gr2m/write-csv-file-action@v1.x
    #   with:
    #     path: data/traffic.csv
    #     columns: timestamp, views, clones, forks
    #     timestamp: ${{ fromJson(steps.get-traffic.outputs.result).timestamp }}
    #     views: ${{ fromJson(steps.get-traffic.outputs.result).views }}
    #     clones: ${{ fromJson(steps.get-traffic.outputs.result).clones }}
    #     forks: ${{ fromJson(steps.get-traffic.outputs.result).forks }}
  # Use the REST API to commit changes, so we get automatic commit signing. See https://gist.github.com/swinton/03e84635b45c78353b1f71e41007fc7c
    # - name: Commit changes
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     FILE_TO_COMMIT: data/traffic.csv
    #     DESTINATION_BRANCH: analytics
    #   run: |
    #     export TODAY=$( date -u '+%Y-%m-%d' )
    #     export MESSAGE="Weekly Traffic Report Update: regenerate $FILE_TO_COMMIT for $TODAY"
    #     export SHA=$( git rev-parse $DESTINATION_BRANCH:$FILE_TO_COMMIT )
    #     export CONTENT=$( base64 -i $FILE_TO_COMMIT )
    #     gh api --method PUT /repos/:owner/:repo/contents/$FILE_TO_COMMIT \
    #       --field message="$MESSAGE" \
    #       --field content="$CONTENT" \
    #       --field encoding="base64" \
    #       --field branch="$DESTINATION_BRANCH" \
    #       --field sha="$SHA"
