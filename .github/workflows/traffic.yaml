on:
  pull_request:
      branches:
        - main
  # schedule: 
  #   # runs once a week on sunday
  #   - cron: "55 23 * * 0"

    
jobs:
  # because cron doesnt allow for "every other week"
  # check-even-week:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: fail if even week
  #     id: check-even-week
  #     run: |
  #       if [ $(expr $(date '+%W') % 2) = 0 ]; then exit 1; else echo "getting traffic"; fi

  traffic:
    # needs: check-even-week
    runs-on: ubuntu-latest
    permissions: write-all
    strategy:
      matrix:
        repo-values:
          - {repo: opentdf, event: ""}
          # - {repo: backend, event: backend-}
          # - {repo: frontend, event: frontend-}
          # - {repo: tests, event: tests-}
          # - {repo: client-web, event: clientweb-}
          # - {repo: client-cpp, event: core-sdk-}
    steps:
    - name: checkout repo
      uses: actions/checkout@v3

    - name: Get Traffic
      uses: actions/github-script@v6
      id: get-traffic
      env:
        OWNER: opentdf
        REPO: ${{ matrix.repo-values.repo }}
        EVENT_TYPE: opentdf-${{ matrix.repo-values.event }}github
      with:
        github-token: ${{ secrets.PERSONAL_ACCESS_TOKEN }} 
        retries: 3
        script: |
          var fs = require('fs')
          const getMetrics = require('./scripts/metrics.js')
          const result = await getMetrics({github, context})
          console.log(result)
          const jsonObj = JSON.stringify(result)
          await fs.writeFile(process.env.REPO+".json", jsonObj, err =>{
          if(err) throw err})
          return result
      
    - id: get-date
      name: Set current date as env variable
      run: echo "DATE=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT
          
    #https://github.com/marketplace/actions/authenticate-to-google-cloud#setup
    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v1'
      with:
        workload_identity_provider: 'projects/766358470289/locations/global/workloadIdentityPools/opentdf-metrics-id-pool/providers/opentdf-metrics-id-provider'
        service_account: 'opentdf-metrics@virtru01dw.iam.gserviceaccount.com'
    # # or with a service account key
    # - id: 'auth'
    #   name: 'Authenticate to Google Cloud'
    #   uses: 'google-github-actions/auth@v1'
    #   with:
    #     credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

    - id: 'upload-file'
      uses: 'google-github-actions/upload-cloud-storage@v1'
      with:
        path: './${{ matrix.repo-values.repo }}.json'
        destination: 'virtru01dw_staging/${{ steps.get-date.outputs.DATE }}-opentdf-${{ matrix.repo-values.event }}github.json'
