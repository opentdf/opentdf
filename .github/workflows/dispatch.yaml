on:
  push:
    branches:
      - feature/PLAT-2146
jobs:
  dispatch_if_charts_updated:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: If chartsVersions.json file were changed?
        id: changed-chartsVersion-file
        uses: tj-actions/changed-files@v35
        with:
          files: chartsVersions.json

      - name: So config file changed, we should get updated chart versions
        id: get-new-chart-versions
        if: steps.changed-chartsVersion-file.outputs.any_changed == 'true'
        run: |
          backendVersion=$(python3 -c "import sys, json; sys.stdout.write(json.load(open('chartsVersions.json'))['backendVersion'])")
          frontendVersion=$(python3 -c "import sys, json; sys.stdout.write(json.load(open('chartsVersions.json'))['frontendVersion'])")
          echo "::set-output name=backendVersion::$backendVersion"
          echo "::set-output name=frontendVersion::$frontendVersion"

      - name: Download artifact
        id: download-artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          name: chartsVersions
          workflow_conclusion: success
          github_token: ${{secrets.PERSONAL_ACCESS_TOKEN}}
          if_no_artifact_found: warn

      - name: Parse versions from artifacts
        id: parse-artifact
        if: steps.changed-chartsVersion-file.outputs.any_changed == 'true'
        run: |
          backendVersion=$(python3 -c "import sys, json; sys.stdout.write(json.load(open('chartsVersionsArtifact.json'))['backendVersion'])")
          backendVersion=$(python3 -c "import sys, json; sys.stdout.write(json.load(open('chartsVersionsArtifact.json'))['frontendVersion'])")
          echo "::set-output name=backendVersion::$backendVersion"
          echo "::set-output name=frontendVersion::$frontendVersion"

      - name: Trigger tests repo with old and new versions
        if: steps.changed-chartsVersion-file.outputs.any_changed == 'true'
        run: |
          echo "new versions">>$GITHUB_STEP_SUMMARY
          echo "$(steps.get-new-chart-versions.outputs.backendVersion)">>$GITHUB_STEP_SUMMARY
          echo "$(steps.get-new-chart-versions.outputs.frontendVersion)">>$GITHUB_STEP_SUMMARY
          echo "old versions">>$GITHUB_STEP_SUMMARY
          echo "$(steps.parse-artifact.outputs.backendVersion)">>$GITHUB_STEP_SUMMARY
          echo "$(steps.parse-artifact.outputs.frontendVersion)">>$GITHUB_STEP_SUMMARY


        

