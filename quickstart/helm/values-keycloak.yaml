image:
  # Keycloak is a non-OpenTDF chart, but with an OpenTDF image
  repository: ghcr.io/opentdf/keycloak
postgresql:
  # This next option (enabled) determines whehter or not Keycloak should 
  # create a Postgres (uniquely) for Keycloak (true) or not (false).
  # 
  # Since it's set to fallse, we'll use the Postgres provided by OpenTDF
  enabled: false
extraEnv: |
  - name: CLAIMS_URL
    value: http://opentdf-entitlement-pdp:3355/entitlements
  - name: JAVA_OPTS_APPEND
    value: -Dkeycloak.profile=preview -Dkeycloak.profile.feature.token_exchange=enabled
  - name: DB_ADDR
    value: postgresql
  - name: DB_DATABASE
    value: keycloak_database
  - name: DB_PORT
    value: "5432"
  - name: DB_VENDOR
    value: postgres
  - name: DB_USER
    value: postgres
  - name: DB_PASSWORD
    value: myPostgresPassword
# - name: KEYCLOAK_PROXY_ADDRESS_FORWARDING
#   value: "true"
# - name: KEYCLOAK_FRONTEND_URL
#   value: "http://offline.demo.internal/auth"
# - name: KEYCLOAK_LOG_LEVEL
#   value: DEBUG
extraEnvFrom: |
  - secretRef:
      name: 'keycloak-secrets'
ingress:
  enabled: true
  ingressClassName: nginx
  rules:
    - host: localhost
      paths: &paths
        - path: /auth(/|$)(.*)
          pathType: Prefix
    - host: host.docker.internal
      paths: *paths
    - host: offline.demo.internal
      paths: *paths
    - host: opentdf.local
      paths: *paths
  tls: null
