load("ext://helm_resource", "helm_resource", "helm_repo")

if not os.environ.get("CR_USER"):
    fail("UNSET CR_USER")
if not os.environ.get("CR_PAT"):
    fail("UNSET CR_PAT")

local("echo $CR_PAT | docker login ghcr.io -u $CR_USER --password-stdin")
local("echo $CR_PAT | helm registry login ghcr.io -u $CR_USER --password-stdin")

# helm_resource(
#     "secrets",
#     "./helm/secrets",
#     flags=[
#         "--set",
#         "imageCredentials.email={}".format(str(os.environ.get("CR_EMAIL", ""))),
#         "--set",
#         "imageCredentials.password={}".format(str(os.environ.get("CR_PAT", ""))),
#         "--set",
#         "imageCredentials.username={}".format(str(os.environ.get("CR_USER", ""))),
#     ],
#     labels="utility",
# )
k8s_yaml(
    helm(
        "./helm/secrets",
        set=[
            "imageCredentials.email={}".format(str(os.environ.get("CR_EMAIL", ""))),
            "imageCredentials.password={}".format(str(os.environ.get("CR_PAT", ""))),
            "imageCredentials.username={}".format(str(os.environ.get("CR_USER", ""))),
        ],
    ),
)

helm_repo(
    "bitnami",
    "https://charts.bitnami.com/bitnami",
    labels="utility",
)
helm_repo(
    "codecentric",
    "https://codecentric.github.io/helm-charts",
    labels="utility",
)
helm_repo(
    "k8s-in",
    "https://kubernetes.github.io/ingress-nginx",
    labels="utility",
)

helm_resource(
    "ingress-nginx",
    "k8s-in/ingress-nginx",
    flags=[
        "--version",
        "4.0.16",
        "--set",
        "controller.config.large-client-header-buffers=20 32k",
        "--set",
        "controller.admissionWebhooks.enabled=false",
    ],
    labels="third-party",
    port_forwards="65432:80",
    resource_deps=["k8s-in"],
)

helm_resource(
    "postgresql",
    "bitnami/postgresql",
    flags=["--version", "10.16.2", "-f", "helm/values-postgresql.yaml"],
    labels="third-party",
    resource_deps=["bitnami"],
)

helm_resource(
    "attributes",
    "oci://ghcr.io/opentdf/charts/attributes",
    flags=["--version", "0.0.1", "-f", "helm/values-attributes.yaml"],
    labels="backend",
    resource_deps=["postgresql"],
)

helm_resource(
    "claims",
    "oci://ghcr.io/opentdf/charts/claims",
    flags=["--version", "0.0.1", "-f", "helm/values-claims.yaml"],
    labels="backend",
    resource_deps=["postgresql"],
)

helm_resource(
    "entitlements",
    "oci://ghcr.io/opentdf/charts/entitlements",
    flags=["--version", "0.0.1", "-f", "helm/values-entitlements.yaml"],
    labels="backend",
    resource_deps=["postgresql"],
)

helm_resource(
    "keycloak",
    "codecentric/keycloak",
    flags=["--version", "17.0.1", "-f", "helm/values-keycloak.yaml"],
    labels="third-party",
    resource_deps=["claims", "codecentric"],
)

helm_resource(
    "kas",
    "oci://ghcr.io/opentdf/charts/kas",
    flags=["--version", "0.0.1", "-f", "helm/values-kas.yaml"],
    labels="backend",
    resource_deps=["attributes", "keycloak"],
)

helm_resource(
    "keycloak-bootstrap",
    "oci://ghcr.io/opentdf/charts/keycloak-bootstrap",
    flags=["--version", "0.4.2", "-f", "helm/values-bootstrap.yaml"],
    labels="utility",
    resource_deps=["attributes", "entitlements", "keycloak"],
)

helm_resource(
    "abacus",
    "./helm/abacus",
    flags=["-f", "helm/values-abacus.yaml"],
    labels="frontend",
    resource_deps=["keycloak-bootstrap"],
)

if os.environ.get("CI"):
    local_resource(
        "validation-test",
        "tests/wait-and-test.sh",
        resource_deps=["ingress-nginx", "kas", "keycloak-bootstrap"],
    )
