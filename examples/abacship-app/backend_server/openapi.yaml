openapi: 3.0.2
info:
  title: FastAPI
  version: 0.1.0
servers:
  - url: ''
paths:
  /status:
    get:
      summary: Get Status
      description: |-
        Returns the current game status
        (See Status enum -- possibly restructuring)
      operationId: get_status_status_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
              example:
                status: 2
  /grant:
    post:
      summary: Grant Attribute
      description: |-
        Accepts Player information of player making POST request
        Grants an attribute to opposing player
        Returns game status
      operationId: grant_attribute_grant_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Player'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
              example:
                status: 2
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /board:
    get:
      summary: Get Board
      description: |-
        Returns 2D array board representation for each player (with encrypted strings, base64-encoded)
        (or nothing if the board is not set yet)
      operationId: get_board_board_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
              example:
                player1:
                  - - encryptedstring00
                    - encryptedstring01
                    - ...
                  - - encryptedstring10
                    - encryptedstring11
                    - ...
                  - - ...
                  - - encryptedstring90
                    - encryptedstring91
                    - ...
                player2:
                  - - encryptedstring00
                    - encryptedstring01
                    - ...
                  - - encryptedstring10
                    - encryptedstring11
                    - ...
                  - - ...
                  - - encryptedstring90
                    - encryptedstring91
                    - ...
    post:
      summary: Post Board
      description: |-
        submit refresh token and 2D array representation of board (unencrypted)
        returns player information including assigned name and new refresh token,
        and the full board

        (will not return until both player submit their board -- tentative design choice)

        performs board verification, assigns attributes to users,
        encryptes strings with tile attribtues

        (im not sure if I will need both the access and refresh token 
        -- i will need the username (ex user1) in order to assign attributes, which i can
        get from the access_token, or can just change it to pass in the username instead)
      operationId: post_board_board_post
      parameters:
        - required: true
          schema:
            title: Access Token
            type: string
          name: access_token
          in: query
        - required: true
          schema:
            title: Refresh Token
            type: string
          name: refresh_token
          in: query
      requestBody:
        content:
          application/json:
            schema:
              title: Board
              maxItems: 10
              minItems: 10
              type: array
              items:
                maxItems: 10
                minItems: 10
                type: array
                items:
                  type: string
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
              example:
                player_info:
                  name: player1
                  refresh_token: the refresh token ...
                  access_token: the access token ...
                status: 2
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /check/square:
    post:
      summary: Check Square
      description: |-
        player: the player making the request
        row: the row of the square to check on opponents board
        col: the col of the square to check on opponents board

        request attribute at that square from opponent
        assign attribute to player
        get updated tokens

        returns Player with updated refresh and access token
        returns updated board
        returns new status
      operationId: check_square_check_square_post
      parameters:
        - required: true
          schema:
            title: Row
            type: integer
          name: row
          in: query
        - required: true
          schema:
            title: Col
            type: integer
          name: col
          in: query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Player'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
              example:
                player_info:
                  name: player1
                  refresh_token: the refresh token ...
                  access_token: the access token ...
                full_board:
                  player1:
                    - - encryptedstring00
                      - encryptedstring01
                      - ...
                    - - encryptedstring10
                      - encryptedstring11
                      - ...
                    - - ...
                    - - encryptedstring90
                      - encryptedstring91
                      - ...
                  player2:
                    - - encryptedstring00
                      - encryptedstring01
                      - ...
                    - - encryptedstring10
                      - encryptedstring11
                      - ...
                    - - ...
                    - - encryptedstring90
                      - encryptedstring91
                      - ...
                status: 2
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
components:
  schemas:
    HTTPValidationError:
      title: HTTPValidationError
      type: object
      properties:
        detail:
          title: Detail
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
    Player:
      title: Player
      required:
        - name
      type: object
      properties:
        name:
          title: Name
          enum:
            - player1
            - player2
          type: string
        refresh_token:
          title: Refresh Token
          type: string
        access_token:
          title: Access Token
          type: string
        username:
          title: Username
          type: string
    ValidationError:
      title: ValidationError
      required:
        - loc
        - msg
        - type
      type: object
      properties:
        loc:
          title: Location
          type: array
          items:
            type: string
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
